# mod.yml - Configuration file for mod framework
# This file will be automatically loaded when the application starts
# Environment variable MOD_PATH can be used to specify a custom path

# 应用基本信息
app:
  # 应用基础信息
  name: "my-application"          # 应用标识名（英文，用于内部识别）
  display_name: "我的应用"         # 显示名称（中文，用于界面展示）
  description: "这是一个示例应用"    # 应用详细描述
  version: "1.0.0"                # 应用版本
  service_base: "/services"       # 服务基础路径
  token_keys: # Token认证的HTTP头字段
    - "Authorization"
    - "X-API-Key"

# 服务器配置（独立的server节点）
server:
  # 基础网络配置
  host: "0.0.0.0"                 # 监听地址
  port: 8080                      # 监听端口

  # 超时配置
  read_timeout: "30s"             # 读取超时
  write_timeout: "30s"            # 写入超时
  idle_timeout: "60s"             # 空闲连接超时

  # 缓冲区配置
  read_buffer_size: 4096          # 读取缓冲区大小
  write_buffer_size: 4096         # 写入缓冲区大小

  # 请求限制
  body_limit: "100MB"             # 请求体大小限制
  concurrency: 262144             # 最大并发数

  # 文件和代理配置
  compressed_file_suffix: ".gz"   # 压缩文件后缀
  proxy_header: "X-Forwarded-For" # 代理头字段
  views: "./templates"            # 模板引擎目录

  # 功能开关
  get_only: false                 # 是否只接受GET请求
  disable_keepalive: false        # 是否禁用Keep-Alive
  disable_default_date: false     # 是否禁用默认Date头
  disable_default_content_type: false # 是否禁用默认Content-Type头
  disable_header_normalizing: false   # 是否禁用头字段标准化
  disable_startup_message: false      # 是否禁用启动消息
  enable_trusted_proxy_check: false   # 是否启用可信代理检查
  prefork: false                  # 是否启用预分叉
  strict_routing: false           # 是否启用严格路由
  case_sensitive: false           # 路由是否大小写敏感
  unescape_path: false            # 是否取消转义路径
  etag: false                     # 是否启用ETag

  # 可信代理列表
  trusted_proxies: # 可信代理列表
    - "127.0.0.1"
    - "::1"

  # CORS跨域配置（默认关闭）
  cors:
    enabled: false                # 是否启用CORS，默认关闭
    allow_origins: # 允许的源，启用时默认为 ["*"]
      - "http://localhost:3000"
      - "https://example.com"
    allow_methods: # 允许的HTTP方法，默认为常用方法
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
    allow_headers: # 允许的请求头，默认为常用头
      - "Origin"
      - "Content-Type"
      - "Accept"
      - "Authorization"
      - "X-Requested-With"
    allow_credentials: false      # 是否允许携带凭证，默认false
    expose_headers: [ ]            # 暴露的响应头，默认为空
    max_age: "24h"                # 预检请求缓存时间，默认24小时

# 缓存配置（支持三种缓存类型）
cache:
  # BigCache配置（内存缓存）
  bigcache:
    enabled: true
    shards: 128                    # 分片数量
    life_window: "10m"             # 条目存活时间
    clean_window: "5m"             # 清理间隔
    max_entries_in_window: 1000    # 窗口时间内最大条目数
    max_entry_size: 500            # 单个条目最大大小（KB）
    verbose: false                 # 是否输出详细日志
    hard_max_cache_size: 8192      # 最大缓存大小（MB）

  # BadgerDB配置（本地持久化键值存储）
  badger:
    enabled: true
    path: "./data/badger"          # 数据存储路径
    in_memory: false               # 是否纯内存模式
    sync_writes: true              # 是否同步写入
    value_log_file_size: 1024      # 值日志文件大小（MB）
    num_compactors: 2              # 压缩器数量
    num_level_zero_tables: 5       # Level 0表数量
    num_level_zero_tables_stall: 10 # Level 0表停滞数量
    value_log_load_size: 256       # 值日志加载大小（MB）
    ttl: "24h"                     # Token过期时间

  # Redis配置（远程缓存）
  redis:
    enabled: false
    address: "localhost:6379"      # Redis服务器地址
    password: ""                   # 认证密码
    db: 0                          # 数据库索引
    pool_size: 10                  # 连接池大小
    min_idle_conns: 5              # 最小空闲连接数
    dial_timeout: "5s"             # 连接超时时间
    read_timeout: "3s"             # 读取超时时间
    write_timeout: "3s"            # 写入超时时间
    idle_timeout: "5m"             # 空闲连接超时时间
    max_conn_age: "30m"            # 连接最大存活时间
    ttl: "24h"                     # Token过期时间

# RSA密钥配置（用于参数解密）
rsa_keys:
  private_key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC7...
    -----END PRIVATE KEY-----
  public_key: |
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuy...
    -----END PUBLIC KEY-----

# 文件上传配置（支持多种存储后端）
# 优先级顺序：S3 > OSS > Local
file_upload:
  # 本地存储配置
  local:
    enabled: true
    upload_dir: "./uploads"        # 上传文件存储目录
    max_size: "10MB"               # 单文件最大尺寸
    allowed_types: # 允许的MIME类型
      - "image/jpeg"
      - "image/png"
      - "image/gif"
      - "application/pdf"
      - "text/plain"
    allowed_exts: # 允许的文件扩展名
      - ".jpg"
      - ".jpeg"
      - ".png"
      - ".gif"
      - ".pdf"
      - ".txt"
    keep_original_name: false      # 是否保持原始文件名（false=随机命名）
    auto_create_dir: true          # 自动创建上传目录
    date_sub_dir: true             # 按日期创建子目录 (YYYY/MM/DD)

  # Amazon S3配置
  s3:
    enabled: false                     # 是否启用S3上传（最高优先级）
    bucket: "my-s3-bucket"             # S3存储桶名称
    region: "us-west-2"                # AWS区域
    access_key: "AKIAIOSFODNN7EXAMPLE" # AWS访问密钥ID
    secret_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" # AWS秘密访问密钥
    endpoint: ""                       # 自定义端点（用于MinIO等S3兼容存储）

  # 阿里云OSS配置
  oss:
    enabled: true                      # 启用OSS上传（优先级中等）
    bucket: "my-oss-bucket"            # OSS存储桶名称
    endpoint: "oss-cn-shenzhen.aliyuncs.com"  # OSS服务端点
    access_key_id: "LTAI5tXXXXXXXXXXXXXXXXXX"    # OSS访问密钥ID
    access_key_secret: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"  # OSS访问密钥

# 静态资源挂载配置
static_mounts:
  - url_prefix: "/static"          # 对外URL前缀
    local_path: "./public/static"  # 本地文件系统路径
    browseable: false              # 是否允许目录浏览（默认false）
    index_file: "index.html"       # 目录默认文件（默认index.html）

  - url_prefix: "/uploads"         # 文件上传目录对外访问
    local_path: "./uploads"
    browseable: true               # 允许浏览上传文件列表
    index_file: ""                 # 不设置默认文件

  - url_prefix: "/assets"          # 静态资源目录
    local_path: "./assets"
    browseable: false
    index_file: "index.html"

# 日志收集配置（支持多种日志服务）
logging:
  # 控制台输出
  console:
    enabled: true
    level: "info"                  # 日志级别: debug, info, warn, error

  # Loki日志收集
  loki:
    enabled: false
    url: "http://loki:3100/loki/api/v1/push"
    labels:
      job: "my-application"
      environment: "production"
    batch_size: 102400             # 批量发送大小
    timeout: "10s"                 # 超时时间

  # 阿里云SLS配置
  sls:
    enabled: false
    endpoint: "cn-hangzhou.log.aliyuncs.com"
    project: "my-project"
    logstore: "my-logstore"
    access_key_id: "LTAI5txxxxxxxxxxxx"
    access_key_secret: "MOk8x0xxxxxxxxxxxxxxxxxxxxxx"

  # 文件日志输出
  file:
    enabled: true
    path: "./logs/app.log"
    max_size: "100MB"
    max_backups: 10
    max_age: "30d"
    compress: true

# Token认证配置
token:
  # JWT签发配置
  jwt:
    enabled: true
    secret_key: "your-secret-key-here"    # JWT签名密钥
    issuer: "my-application"              # 签发者
    expire_duration: "24h"                # Token过期时间
    refresh_expire_duration: "168h"       # 刷新Token过期时间(7天)
    algorithm: "HS256"                    # 签名算法: HS256, HS384, HS512

  # Token验证配置
  validation:
    enabled: true                         # 是否启用Token验证
    skip_expired_check: false             # 是否跳过过期检查
    cache_strategy: "bigcache"            # 缓存查询策略: bigcache, badger, redis
    cache_key_prefix: "token:"            # 缓存键前缀